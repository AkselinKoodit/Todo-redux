{"version":3,"sources":["services/notes.js","store/actions.js","containers/NewNote.js","containers/Notes.js","components/footer.js","App.js","store/reducers/reducer.js","store/store.js","index.js"],"names":["baseUrl","getAll","a","axios","get","response","data","createNew","text","object","completed","post","removeNote","id","delete","toggleNote","note","put","ADD_TODO","TOGGLE_COMPLETE","INIT_NOTE","DELETE_NOTE","createNote","dispatch","newNote","type","NewNote","useDispatch","addTodo","e","preventDefault","target","noteInput","value","onSubmit","placeholder","name","className","Notes","notes","useSelector","state","handleDelete","removeOneNote","map","onClick","toggleDone","event","Footer","App","useEffect","reducer","action","actionTypes","noteToChange","find","n","changeDone","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1aa09f3c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:3001/notes';\r\n\r\nexport const getAll = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  return response.data;\r\n};\r\nexport const createNew = async (text) => {\r\n  const object = { text, completed: false };\r\n  const response = await axios.post(baseUrl, object);\r\n  return response.data;\r\n};\r\n// const noteDeleted = () => ({\r\n//   type: actionTypes.DELETE_NOTE,\r\n// });\r\n\r\nexport const removeNote = async (id) => {\r\n  const response = await axios.delete(`${baseUrl}/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const toggleNote = async (id, note) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, note);\r\n  return response.data;\r\n};\r\n\r\nexport default { getAll, createNew, removeNote };\r\n","import { getAll, createNew, removeNote, toggleNote } from '../services/notes';\r\n\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const TOGGLE_COMPLETE = 'TOGGLE_COMPLETE';\r\nexport const INIT_NOTE = 'INIT_NOTE';\r\nexport const DELETE_NOTE = 'DELETE_NOTE';\r\n\r\nexport const initializeNotes = () => {\r\n  return async (dispatch) => {\r\n    const notes = await getAll();\r\n    dispatch({\r\n      type: INIT_NOTE,\r\n      data: notes,\r\n    });\r\n  };\r\n};\r\n\r\nexport const createNote = (text) => {\r\n  return async (dispatch) => {\r\n    const newNote = await createNew(text);\r\n    dispatch({\r\n      type: ADD_TODO,\r\n      data: newNote,\r\n    });\r\n  };\r\n};\r\nexport const removeOneNote = (id) => {\r\n  return async (dispatch) => {\r\n    await removeNote(id);\r\n    const notes = await getAll();\r\n    dispatch({\r\n      type: DELETE_NOTE,\r\n      data: notes,\r\n    });\r\n  };\r\n};\r\n\r\nexport const toggleDone = (id, note) => {\r\n  return async (dispatch) => {\r\n    await toggleNote(id, note);\r\n    dispatch({\r\n      type: TOGGLE_COMPLETE,\r\n      id: id,\r\n    });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createNote } from '../store/actions';\r\n\r\nconst NewNote = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const addTodo = async (e) => {\r\n    e.preventDefault();\r\n    const text = e.target.noteInput.value;\r\n    dispatch(createNote(text));\r\n    e.target.noteInput.value = '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={addTodo}>\r\n      <input type=\"text\" placeholder=\"Enter a note...\" name=\"noteInput\"></input>\r\n      <input type=\"submit\" className=\"btn\" value=\"Add note\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewNote;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { MdDeleteForever } from 'react-icons/md';\r\nimport { removeOneNote, toggleDone } from '../store/actions';\r\n\r\nconst Notes = () => {\r\n  const notes = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDelete = (e, id) => {\r\n    e.preventDefault();\r\n    dispatch(removeOneNote(id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {notes.map((note) => (\r\n          <li\r\n            key={note.id}\r\n            onClick={() =>\r\n              dispatch(\r\n                toggleDone(note.id, {\r\n                  text: note.text,\r\n                  completed: !note.completed,\r\n                  id: note.id,\r\n                })\r\n              )\r\n            }\r\n            className={note.completed ? 'done todo' : 'todo'}\r\n          >\r\n            {note.text}\r\n            {/* <span> */}{' '}\r\n            <MdDeleteForever\r\n              className=\"trashCan\"\r\n              onClick={(event) => handleDelete(event, note.id)}\r\n            />\r\n            {/* </span> */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default Notes;\r\n","import React from 'react';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div>\r\n      <p>This is the footer</p>\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\nimport NewNote from './containers/NewNote';\nimport Notes from './containers/Notes';\nimport Footer from './components/footer';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { initializeNotes } from './store/actions';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(initializeNotes());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <h1>Todo app with Redux and hooks</h1>\n      <NewNote />\n      <Notes />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import * as actionTypes from '../actions';\r\nimport noteServices from '../../services/notes';\r\n// import { useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\nconst reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case actionTypes.DELETE_NOTE:\r\n      return action.data;\r\n    case actionTypes.INIT_NOTE:\r\n      return action.data;\r\n    case actionTypes.ADD_TODO:\r\n      return [...state, action.data];\r\n    case actionTypes.TOGGLE_COMPLETE:\r\n      const noteToChange = state.find((n) => n.id === action.id);\r\n      const changeDone = {\r\n        ...noteToChange,\r\n        completed: !noteToChange.completed,\r\n      };\r\n      return state.map((note) => (note.id !== action.id ? note : changeDone));\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducers/reducer';\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}